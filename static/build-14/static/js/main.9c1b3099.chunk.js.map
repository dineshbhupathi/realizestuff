{"version":3,"sources":["components/Header.js","components/SingleArticle.js","components/MainFeaturedPost.js","components/FeaturedPost.js","components/Markdown.js","components/Main.js","components/Sidebar.js","components/Footer.js","components/Blog.js","App.js","serviceWorker.js","index.js","logo.svg"],"names":["useStyles","makeStyles","theme","toolbar","borderBottom","palette","divider","toolbarTitle","flex","toolbarSecondary","justifyContent","overflowX","toolbarLink","padding","spacing","flexShrink","Header","props","classes","sections","title","Fragment","Toolbar","className","Button","size","Typography","component","variant","color","align","noWrap","IconButton","map","section","Link","key","href","url","mainFeaturedPost","position","backgroundColor","grey","common","white","marginBottom","backgroundImage","backgroundSize","backgroundRepeat","backgroundPosition","overlay","top","bottom","right","left","mainFeaturedPostContent","breakpoints","up","paddingRight","SingleFeaturedPost","post","console","log","heading","fontSize","typography","pxToRem","fontWeight","fontWeightRegular","MainFeaturedPost","React","useState","page","setPage","noOfPages","Math","ceil","length","List","root","slice","article","Paper","style","image","display","src","alt","imageText","ListItem","alignItems","ListItemAvatar","Avatar","ListItemText","primary","headline","secondary","inline","name","Accordion","AccordionSummary","expandIcon","aria-controls","id","AccordionDetails","content","videofile","aria-label","playIcon","Divider","Box","Pagination","count","onChange","event","value","defaultPage","showFirstButton","showLastButton","ul","paginator","card","cardDetails","cardMedia","width","withStyles","listItem","marginTop","markdown","body2","sidebarAboutBox","sidebarSection","Copyright","Date","getFullYear","footer","background","paper","Footer","description","Container","maxWidth","gutterBottom","mainGrid","GitHubIcon","TwitterIcon","FacebookIcon","Blog","Articles","setArticles","useEffect","getArticles","axios","get","then","response","data","CssBaseline","App","path","handler","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message","module","exports"],"mappings":"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","file":"static/js/main.9c1b3099.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Link from '@material-ui/core/Link';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  toolbar: {\r\n    borderBottom: `1px solid ${theme.palette.divider}`,\r\n  },\r\n  toolbarTitle: {\r\n    flex: 1,\r\n  },\r\n  toolbarSecondary: {\r\n    justifyContent: 'space-between',\r\n    overflowX: 'auto',\r\n  },\r\n  toolbarLink: {\r\n    padding: theme.spacing(1),\r\n    flexShrink: 0,\r\n  },\r\n}));\r\n\r\nexport default function Header(props) {\r\n  const classes = useStyles();\r\n  const { sections, title } = props;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Toolbar className={classes.toolbar}>\r\n        <Button size=\"small\">Subscribe</Button>\r\n        <Typography\r\n          component=\"h2\"\r\n          variant=\"h5\"\r\n          color=\"inherit\"\r\n          align=\"center\"\r\n          noWrap\r\n          className={classes.toolbarTitle}\r\n        >\r\n          {title}\r\n        </Typography>\r\n        <IconButton>\r\n          <SearchIcon />\r\n        </IconButton>\r\n        <Button variant=\"outlined\" size=\"small\">\r\n          Sign up\r\n        </Button>\r\n      </Toolbar>\r\n      <Toolbar component=\"nav\" variant=\"dense\" className={classes.toolbarSecondary}>\r\n        {sections.map((section) => (\r\n          <Link\r\n            color=\"inherit\"\r\n            noWrap\r\n            key={section.title}\r\n            variant=\"body2\"\r\n            href={section.url}\r\n            className={classes.toolbarLink}\r\n          >\r\n            {section.title}\r\n          </Link>\r\n        ))}\r\n      </Toolbar>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nHeader.propTypes = {\r\n  sections: PropTypes.array,\r\n  title: PropTypes.string,\r\n};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Link from '@material-ui/core/Link';\r\nimport MainFeaturedPost from './MainFeaturedPost'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    mainFeaturedPost: {\r\n      position: 'relative',\r\n      backgroundColor: theme.palette.grey[800],\r\n      color: theme.palette.common.white,\r\n      marginBottom: theme.spacing(4),\r\n      backgroundImage: 'url(https://source.unsplash.com/random)',\r\n      backgroundSize: 'cover',\r\n      backgroundRepeat: 'no-repeat',\r\n      backgroundPosition: 'center',\r\n    },\r\n    overlay: {\r\n      position: 'absolute',\r\n      top: 0,\r\n      bottom: 0,\r\n      right: 0,\r\n      left: 0,\r\n      backgroundColor: 'rgba(0,0,0,.3)',\r\n    },\r\n    mainFeaturedPostContent: {\r\n      position: 'relative',\r\n      padding: theme.spacing(3),\r\n      [theme.breakpoints.up('md')]: {\r\n        padding: theme.spacing(6),\r\n        paddingRight: 0,\r\n      },\r\n    },\r\n  }));\r\n  \r\nexport default function SingleFeaturedPost(props) {\r\n    const classes = useStyles();\r\n    const { post } = props;\r\n    console.log(post,'single')\r\n    return (\r\n      <div>\r\n         \r\n    <h1>new</h1>\r\n          </div>\r\n    \r\n    )}\r\n  \r\n  ","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Link from '@material-ui/core/Link';\r\nimport SingleFeaturedPost from './SingleArticle';\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport { pink } from '@material-ui/core/colors';\r\nimport Pagination from '@material-ui/lab/Pagination';\r\nimport {List,Box} from '@material-ui/core';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  mainFeaturedPost: {\r\n    position: 'relative',\r\n    backgroundColor: theme.palette.grey[800],\r\n    color: theme.palette.common.white,\r\n    marginBottom: theme.spacing(4),\r\n    // backgroundImage: 'url(https://source.unsplash.com/random)',\r\n    backgroundSize: 'cover',\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundPosition: 'center',\r\n  },\r\n  overlay: {\r\n    position: 'absolute',\r\n    top: 0,\r\n    bottom: 0,\r\n    right: 0,\r\n    left: 0,\r\n    backgroundColor: 'rgba(0,0,0,.3)',\r\n  },\r\n  mainFeaturedPostContent: {\r\n    position: 'relative',\r\n    padding: theme.spacing(3),\r\n    [theme.breakpoints.up('md')]: {\r\n      padding: theme.spacing(6),\r\n      paddingRight: 0,\r\n    },\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    fontWeight: theme.typography.fontWeightRegular,\r\n  },\r\n}));\r\n\r\nexport default function MainFeaturedPost(props) {\r\n  const classes = useStyles();\r\n  const itemsPerPage = 5;\r\n  const [page, setPage] = React.useState(1);\r\n  const { post } = props;\r\n  const noOfPages = Math.ceil(post.length / itemsPerPage)\r\n  \r\n  console.log(Math.ceil(post.length / itemsPerPage),'ll')\r\n\r\n  console.log(noOfPages,'pa')\r\n  const handleChange = (event, value) => {\r\n    console.log(value)\r\n    setPage(value);\r\n  };\r\n\r\n  return (\r\n  //   post.map((article) => (\r\n  //   <Paper className={classes.mainFeaturedPost} style={{ backgroundImage: `url(${article.image})` }}>\r\n  //     {/* Increase the priority of the hero background image */}\r\n  //     {<img style={{ display: 'none' }} src={article.image} alt={article.imageText} />}\r\n  //     <div className={classes.overlay} />\r\n  //     <Grid container>\r\n  //       <Grid item md={6}>\r\n  //         <div className={classes.mainFeaturedPostContent}>\r\n  //           <Typography component=\"h1\" variant=\"h3\" color=\"inherit\" gutterBottom>\r\n  //             {article.headline}\r\n  //           </Typography>\r\n  //           <Typography variant=\"h5\" color=\"inherit\" paragraph>\r\n  //             {article.name}\r\n  //           </Typography>\r\n  //           <Accordion>\r\n  //       <AccordionSummary\r\n  //         expandIcon={<ExpandMoreIcon />}\r\n  //         aria-controls=\"panel1a-content\"\r\n  //         id=\"panel1a-header\"\r\n  //       >\r\n  //         <Typography className={classes.heading}>Expand To Read Content </Typography>\r\n  //       </AccordionSummary>\r\n  //       <AccordionDetails>\r\n  //         <Typography>\r\n  //           {article.content}\r\n  //           <br></br>\r\n  //         <Link href={article.videofile}>click to see video</Link>\r\n            \r\n  //         </Typography>\r\n  //       </AccordionDetails>\r\n  //     </Accordion>\r\n  //           {/* <Link href={'/article/'+article.id }> */}\r\n  //           {/* <Link variant=\"subtitle1\" post={article.id} href=\"article/{post.id}\"> */}\r\n  //             {/* <SingleFeaturedPost  article={article} /> */}\r\n  //             {/* Continue Reading... */}\r\n  //           {/* </Link> */}\r\n  //         </div>\r\n  //       </Grid>\r\n  //     </Grid>\r\n  //   </Paper>\r\n  //   ))\r\n  // );\r\n  // post.map((article) => (\r\n    <div>\r\n  <List className={classes.root}>\r\n     {post\r\n          .slice((page - 1) * itemsPerPage, page * itemsPerPage)\r\n          .map(article => {\r\n            return(\r\n    <Paper className={classes.mainFeaturedPost} style={{ backgroundImage: `url(${article.image})` }}>\r\n       {/* Increase the priority of the hero background image */}\r\n     {<img style={{ display: 'none' }} src={article.image} alt={article.imageText} />}\r\n      <ListItem alignItems=\"flex-start\">\r\n        <ListItemAvatar>\r\n          <Avatar alt=\"Remy Sharp\" src=\"../static/images/avatar/dk.jpg\" />\r\n        </ListItemAvatar>\r\n        <ListItemText\r\n        className={classes.mainFeaturedPostContent}\r\n        component=\"h1\"\r\n          primary={article.headline}\r\n          secondary={\r\n            <React.Fragment>\r\n              <Typography\r\n                component=\"span\"\r\n                variant=\"body2\"\r\n                className={classes.inline}\r\n                color=\"secondary\"\r\n              >\r\n                {article.name}\r\n              </Typography>\r\n            <Accordion>\r\n       <AccordionSummary\r\n          expandIcon={<ExpandMoreIcon />}\r\n          aria-controls=\"panel1a-content\"\r\n          id=\"panel1a-header\"\r\n        >\r\n          <Typography className={classes.heading}>Expand To Read Content </Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails>\r\n          <Typography>\r\n            {article.content}\r\n            <br></br>\r\n          <Link href={article.videofile}>\r\n          <IconButton aria-label=\"play/pause\">\r\n            <PlayArrowIcon className={classes.playIcon} />\r\n          </IconButton>\r\n            Play Video Of relate to this content\r\n          \r\n            </Link>\r\n            \r\n          </Typography>\r\n        </AccordionDetails>\r\n      </Accordion>\r\n            </React.Fragment>\r\n          }\r\n        />\r\n      </ListItem>\r\n      <Divider variant=\"inset\" component=\"li\" />\r\n      </Paper>\r\n           ) })}\r\n    </List>\r\n    <Divider />\r\n      <Box component=\"span\">\r\n        <Pagination\r\n          count={noOfPages}\r\n          page={page}\r\n          onChange={handleChange}\r\n          defaultPage={1}\r\n          color=\"primary\"\r\n          size=\"large\"\r\n          showFirstButton\r\n          showLastButton\r\n          classes={{ ul: classes.paginator }}\r\n        />\r\n      </Box>\r\n    </div>\r\n\r\n  // ))\r\n  );\r\n  \r\n}\r\n\r\nMainFeaturedPost.propTypes = {\r\n  post: PropTypes.object,\r\n};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Hidden from '@material-ui/core/Hidden';\r\n\r\nconst useStyles = makeStyles({\r\n  card: {\r\n    display: 'flex',\r\n  },\r\n  cardDetails: {\r\n    flex: 1,\r\n  },\r\n  cardMedia: {\r\n    width: 160,\r\n  },\r\n});\r\n\r\nexport default function FeaturedPost(props) {\r\n  const classes = useStyles();\r\n  const { post } = props;\r\n\r\n  return (\r\n    <Grid item xs={12} md={6}>\r\n      <CardActionArea component=\"a\" href=\"#\">\r\n        <Card className={classes.card}>\r\n          <div className={classes.cardDetails}>\r\n            <CardContent>\r\n              <Typography component=\"h2\" variant=\"h5\">\r\n                {post.title}\r\n              </Typography>\r\n              <Typography variant=\"subtitle1\" color=\"textSecondary\">\r\n                {post.date}\r\n              </Typography>\r\n              <Typography variant=\"subtitle1\" paragraph>\r\n                {post.description}\r\n              </Typography>\r\n              <Typography variant=\"subtitle1\" color=\"primary\">\r\n                Continue reading...\r\n              </Typography>\r\n            </CardContent>\r\n          </div>\r\n          <Hidden xsDown>\r\n            <CardMedia className={classes.cardMedia} image={post.image} title={post.imageTitle} />\r\n          </Hidden>\r\n        </Card>\r\n      </CardActionArea>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nFeaturedPost.propTypes = {\r\n  post: PropTypes.object,\r\n};","import React from 'react';\r\nimport ReactMarkdown from 'markdown-to-jsx';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Link from '@material-ui/core/Link';\r\n\r\nconst styles = (theme) => ({\r\n  listItem: {\r\n    marginTop: theme.spacing(1),\r\n  },\r\n});\r\n\r\nconst options = {\r\n  overrides: {\r\n    h1: {\r\n      component: Typography,\r\n      props: {\r\n        gutterBottom: true,\r\n        variant: 'h5',\r\n      },\r\n    },\r\n    h2: { component: Typography, props: { gutterBottom: true, variant: 'h6' } },\r\n    h3: { component: Typography, props: { gutterBottom: true, variant: 'subtitle1' } },\r\n    h4: {\r\n      component: Typography,\r\n      props: { gutterBottom: true, variant: 'caption', paragraph: true },\r\n    },\r\n    p: { component: Typography, props: { paragraph: true } },\r\n    a: { component: Link },\r\n    li: {\r\n      component: withStyles(styles)(({ classes, ...props }) => (\r\n        <li className={classes.listItem}>\r\n          <Typography component=\"span\" {...props} />\r\n        </li>\r\n      )),\r\n    },\r\n  },\r\n};\r\n\r\nexport default function Markdown(props) {\r\n  return <ReactMarkdown options={options} {...props} />;\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Markdown from './Markdown';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  markdown: {\r\n    ...theme.typography.body2,\r\n    padding: theme.spacing(3, 0),\r\n  },\r\n}));\r\n\r\nexport default function Main(props) {\r\n  const classes = useStyles();\r\n  const { posts, title } = props;\r\n\r\n  return (\r\n    <Grid item xs={12} md={8}>\r\n      <Typography variant=\"h6\" gutterBottom>\r\n        {title}\r\n      </Typography>\r\n      <Divider />\r\n      {posts.map((post) => (\r\n        <Markdown className={classes.markdown} key={post.substring(0, 40)}>\r\n          {post}\r\n        </Markdown>\r\n      ))}\r\n    </Grid>\r\n  );\r\n}\r\n\r\nMain.propTypes = {\r\n  posts: PropTypes.array,\r\n  title: PropTypes.string,\r\n};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Link from '@material-ui/core/Link';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  sidebarAboutBox: {\r\n    padding: theme.spacing(2),\r\n    backgroundColor: theme.palette.grey[200],\r\n  },\r\n  sidebarSection: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nexport default function Sidebar(props) {\r\n  const classes = useStyles();\r\n  const { archives, description, social, title } = props;\r\n\r\n  return (\r\n    <Grid item xs={12} md={4}>\r\n      <Paper elevation={0} className={classes.sidebarAboutBox}>\r\n        <Typography variant=\"h6\" gutterBottom>\r\n          {title}\r\n        </Typography>\r\n        <Typography>{description}</Typography>\r\n      </Paper>\r\n      <Typography variant=\"h6\" gutterBottom className={classes.sidebarSection}>\r\n        Archives\r\n      </Typography>\r\n      {archives.map((archive) => (\r\n        <Link display=\"block\" variant=\"body1\" href={archive.url} key={archive.title}>\r\n          {archive.title}\r\n        </Link>\r\n      ))}\r\n      <Typography variant=\"h6\" gutterBottom className={classes.sidebarSection}>\r\n        Social\r\n      </Typography>\r\n      {social.map((network) => (\r\n        <Link display=\"block\" variant=\"body1\" href=\"#\" key={network}>\r\n          <Grid container direction=\"row\" spacing={1} alignItems=\"center\">\r\n            <Grid item>\r\n              <network.icon />\r\n            </Grid>\r\n            <Grid item>{network.name}</Grid>\r\n          </Grid>\r\n        </Link>\r\n      ))}\r\n    </Grid>\r\n  );\r\n}\r\n\r\nSidebar.propTypes = {\r\n  archives: PropTypes.array,\r\n  description: PropTypes.string,\r\n  social: PropTypes.array,\r\n  title: PropTypes.string,\r\n};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Link from '@material-ui/core/Link';\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        Realize Stuff\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  footer: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    // marginTop: theme.spacing(8),\r\n    padding: theme.spacing(6, 0),\r\n  },\r\n}));\r\n\r\nexport default function Footer(props) {\r\n  const classes = useStyles();\r\n  const { description, title } = props;\r\n\r\n  return (\r\n    <footer className={classes.footer}>\r\n      <Container maxWidth=\"lg\">\r\n        <Typography variant=\"h6\" align=\"center\" gutterBottom>\r\n          {title}\r\n        </Typography>\r\n        <Typography variant=\"subtitle1\" align=\"center\" color=\"textSecondary\" component=\"p\">\r\n          {description}\r\n        </Typography>\r\n        <Copyright />\r\n      </Container>\r\n    </footer>\r\n  );\r\n}\r\n\r\nFooter.propTypes = {\r\n  description: PropTypes.string,\r\n  title: PropTypes.string,\r\n};","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Container from '@material-ui/core/Container';\r\nimport GitHubIcon from '@material-ui/icons/GitHub';\r\nimport FacebookIcon from '@material-ui/icons/Facebook';\r\nimport TwitterIcon from '@material-ui/icons/Twitter';\r\nimport Header from './Header';\r\nimport MainFeaturedPost from './MainFeaturedPost';\r\nimport FeaturedPost from './FeaturedPost';\r\nimport Main from './Main';\r\nimport Sidebar from './Sidebar';\r\nimport Footer from './Footer';\r\nimport axios from 'axios'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  mainGrid: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nconst sections = [\r\n  { title: 'Technology', url: '#' },\r\n  { title: 'Design', url: '#' },\r\n  { title: 'Culture', url: '#' },\r\n  { title: 'Business', url: '#' },\r\n  { title: 'Politics', url: '#' },\r\n  { title: 'Opinion', url: '#' },\r\n  { title: 'Science', url: '#' },\r\n  { title: 'Health', url: '#' },\r\n  { title: 'Style', url: '#' },\r\n  { title: 'Travel', url: '#' },\r\n];\r\n\r\nconst mainFeaturedPost = {\r\n  title: 'Title of a longer featured blog post',\r\n  description:\r\n    \"Multiple lines of text that form the lede, informing new readers quickly and efficiently about what's most interesting in this post's contents.\",\r\n  image: 'https://source.unsplash.com/random',\r\n  imgText: 'main image description',\r\n  linkText: 'Continue reading…',\r\n};\r\n\r\nconst featuredPosts = [\r\n  {\r\n    title: 'Featured post',\r\n    date: 'Nov 12',\r\n    description:\r\n      'This is a wider card with supporting text below as a natural lead-in to additional content.',\r\n    image: 'https://source.unsplash.com/random',\r\n    imageText: 'Image Text',\r\n  },\r\n  {\r\n    title: 'Post title',\r\n    date: 'Nov 11',\r\n    description:\r\n      'This is a wider card with supporting text below as a natural lead-in to additional content.',\r\n    image: 'https://source.unsplash.com/random',\r\n    imageText: 'Image Text',\r\n  },\r\n];\r\n\r\nconst posts = [];\r\n\r\nconst sidebar = {\r\n  title: 'About',\r\n  description:\r\n    'Etiam porta sem malesuada magna mollis euismod. Cras mattis consectetur purus sit amet fermentum. Aenean lacinia bibendum nulla sed consectetur.',\r\n  archives: [\r\n    { title: 'March 2020', url: '#' },\r\n    { title: 'February 2020', url: '#' },\r\n    { title: 'January 2020', url: '#' },\r\n    { title: 'November 1999', url: '#' },\r\n    { title: 'October 1999', url: '#' },\r\n    { title: 'September 1999', url: '#' },\r\n    { title: 'August 1999', url: '#' },\r\n    { title: 'July 1999', url: '#' },\r\n    { title: 'June 1999', url: '#' },\r\n    { title: 'May 1999', url: '#' },\r\n    { title: 'April 1999', url: '#' },\r\n  ],\r\n  social: [\r\n    { name: 'GitHub', icon: GitHubIcon },\r\n    { name: 'Twitter', icon: TwitterIcon },\r\n    { name: 'Facebook', icon: FacebookIcon },\r\n  ],\r\n};\r\n\r\nexport default function Blog() {\r\n  const classes = useStyles();\r\n  const [Articles, setArticles] = React.useState([]);\r\n\r\n  React.useEffect(()=>{\r\n\tgetArticles()\r\n   },[])\r\n    const getArticles=()=>{\r\n       axios.get('http://realizestuff.herokuapp.com/articles/').then(response=>{\r\n        console.log(response.data)\r\n    setArticles(response.data)}\r\n    )}\r\n  return (\r\n    <React.Fragment>\r\n      <CssBaseline />\r\n      <Container maxWidth=\"lg\">\r\n        <Header title=\"Realize Stuff\" sections={sections} />\r\n        <main>\r\n          <MainFeaturedPost  post={Articles} />\r\n          {/* <Grid container spacing={4}>\r\n            {featuredPosts.map((post) => (\r\n              <FeaturedPost key={post.title} post={post} />\r\n            ))}\r\n          </Grid>\r\n          <Grid container spacing={5} className={classes.mainGrid}>\r\n            <Main title=\"From the firehose\" posts={posts} />\r\n            <Sidebar\r\n              title={sidebar.title}\r\n              description={sidebar.description}\r\n              archives={sidebar.archives}\r\n              social={sidebar.social}\r\n            />\r\n          </Grid> */}\r\n        </main>\r\n      </Container>\r\n      <Footer />\r\n      {/* title=\"Footer\" description=\"Something here to give the footer a purpose!\" */}\r\n    </React.Fragment>\r\n  );\r\n}","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Blog from './components/Blog'\nimport { BrowserRouter as Router, Route, Link, Switch,BrowserRouter } from 'react-router-dom';\nimport SingleFeaturedPost from './components/SingleArticle';\nimport MainFeaturedPost from './components/MainFeaturedPost'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n      <div>\n          <Switch>\n          <Route path=\"/article/:id\" handler={MainFeaturedPost}><SingleFeaturedPost /></Route>        \n            <Route path=\"\"><Blog></Blog></Route>\n            \n        \n        </Switch>\n      </div> \n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}